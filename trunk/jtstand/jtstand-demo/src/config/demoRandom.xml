<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testSequence xmlns="http://www.jtstand.com/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="DemoRandom" xsi:schemaLocation="http://www.jtstand.com/ jtstand-1.0.xsd">
    <property name="DECIMAL_FORMAT" value="0.000"/>
    <limit name="the 1st step's limit" comp="GELE" lsl="-2.0" usl="4.0" unit="V">
        <remark>Set to plus-minus 3 sigma</remark>
    </limit>
    <mainStep name="RANDOM">
        <remark>&lt;html&gt;This step is the root of the main sequence&lt;br&gt;and another line&lt;/html&gt;</remark>
        <property name="clos" mutex="true">{->println &quot;I am a closure&quot;}</property>
        <property name="scr" mutex="true">{com.jtstand.TestStepInstance it->it.parse('println &quot;I am a Script&quot;')}</property>
        <property name="TEST_IP_PORT">8089</property>
        <property name="serversocket"/>
        <property name="serversession" mutex="true"/>
        <property name="clientsession" mutex="true"/>

        <step name="RANDOM1" useLimit="the 1st step's limit">
            <remark>This is the 1st real step</remark>
            <property name="AVERAGE">0.5 + 0.5</property>
            <script>step.setValue(step.getPropertyDouble('AVERAGE') + step.getPropertyDouble('SIGMA',1.0D) * (new java.util.Random()).nextGaussian() )</script>
        </step>
        <step name="Closure Class">
            <script>step.setValue(step.getVariable('clos').getClass().getCanonicalName())</script>
        </step>
        <step name="Closure Call">
            <script>step.setValue(step.getVariable('clos').call())</script>
        </step>
        <step name="Script Class">
            <script>step.setValue(step.getVariable('scr').call(step).getClass().getCanonicalName())</script>
        </step>
        <step name="Script Call">
            <script>step.setValue(step.getVariable('scr').call(step).run())</script>
        </step>
        <step name="Start the server">
            <script>step.setVariable('serversocket', new java.net.ServerSocket(step.getPropertyInteger('TEST_IP_PORT')))</script>
        </step>
        <step name="Server and Client parallel" parallel="true">
            <step name="Server side">
                <step name="Accept connection at the server">
                    <script>step.setVariable('serversession', new com.jtstand.io.IOSession(step.getVariable('serversocket').accept()))</script>
                </step>
                <step name="Receive by the server">
                    <script>step.getVariable('serversession').expect 'GET'</script>
                </step>
            </step>
            <step name="Client side">
                <step name="Connect the client" preSleep="50">
                    <script>step.setVariable('clientsession', new com.jtstand.io.IOSession(new java.net.Socket('127.0.0.1', step.getPropertyInteger('TEST_IP_PORT'))))</script>
                </step>
                <step name="Send from the client">
                    <script>step.getVariable('clientsession').send 'GET'</script>
                </step>
            </step>
        </step>
    </mainStep>
</testSequence>
